<?php

require_once("lib/less.php/Cache.php");
require_once("lib/less.php/Less.php");
require_once("lib/less.php/Version.php");

function less_css_alter(&$css){
  less_check_for_less($css);
}

function less_get_cache_path(){
  return "sites/default/files/less-cache/";
}

function less_check_for_less(&$css){

  $less_cache_disabled = (defined('LESS_DISABLE_CACHE') && LESS_DISABLE_CACHE == true);

  if($less_cache_disabled){
    drupal_set_message("WARNING: LESS_DISABLE_CACHE is set to true! LESS cache disabled! This is a huge performance hit!", "error");
  }

  foreach($css as $key => &$css_elem){
    if(isset($css_elem['data'])){
      if(pathinfo($css_elem['data'], PATHINFO_EXTENSION) == 'less'){
        $input = $css_elem['data'];
        $output = less_get_cache_path() . pathinfo($css_elem['data'], PATHINFO_FILENAME) . ".css";
        try{
          if(!file_exists(dirname($output))){
            mkdir(dirname($output), 0777, true);
          }

          if(!file_exists($output) || filemtime($output) <= filemtime($input) || $less_cache_disabled){
            if(file_exists($output)){
              unlink($output);
            }

            $parser = new Less_Parser();
            $css_root = "/" . dirname($input) . "/";
            $parser->parseFile($input, $css_root);
            $css_output = $parser->getCss();

            file_put_contents($output, $css_output);
          }

          $css_elem['data'] = rtrim(SERVER_ROOT_PATH, "/") . "/{$output}";
          $css_elem['data'] = $output;

          $css[$css_elem['data']] = $css_elem;
          unset($css[$key]);
        }catch(Exception $e){
          drupal_set_message("WARNING: Less compile exception: {$e->getMessage()}", "error");
        }
      }
    }
  }
}

function less_flush_caches() {
  foreach(scandir(less_get_cache_path()) as $cached_file){
    switch($cached_file){
      case '.';
      case '..';
      case '.gitignore';
        break;
      default:
        $path_parts = pathinfo($cached_file);
        if($path_parts['extension'] == 'css'){
          $whole_path = less_get_cache_path() . "{$cached_file}";
          drupal_set_message("Removed {$whole_path}", 'status');
          unlink($whole_path);
        }
    }
  }
}
